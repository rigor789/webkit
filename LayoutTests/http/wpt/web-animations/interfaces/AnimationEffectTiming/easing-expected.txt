
FAIL Test default value assert_equals: expected (string) "linear" but got (undefined) undefined
FAIL step-start function assert_equals: expected "steps(1, start)" but got "step-start"
FAIL steps(1, start) function animation.effect.getComputedTiming is not a function. (In 'animation.effect.getComputedTiming()', 'animation.effect.getComputedTiming' is undefined)
FAIL steps(2, start) function animation.effect.getComputedTiming is not a function. (In 'animation.effect.getComputedTiming()', 'animation.effect.getComputedTiming' is undefined)
FAIL step-end function assert_equals: expected "steps(1)" but got "step-end"
FAIL steps(1) function animation.effect.getComputedTiming is not a function. (In 'animation.effect.getComputedTiming()', 'animation.effect.getComputedTiming' is undefined)
FAIL steps(1, end) function assert_equals: expected "steps(1)" but got "steps(1, end)"
FAIL steps(2, end) function assert_equals: expected "steps(2)" but got "steps(2, end)"
FAIL frames function animation.effect.getComputedTiming is not a function. (In 'animation.effect.getComputedTiming()', 'animation.effect.getComputedTiming' is undefined)
FAIL linear function animation.effect.getComputedTiming is not a function. (In 'animation.effect.getComputedTiming()', 'animation.effect.getComputedTiming' is undefined)
FAIL ease function animation.effect.getComputedTiming is not a function. (In 'animation.effect.getComputedTiming()', 'animation.effect.getComputedTiming' is undefined)
FAIL ease-in function animation.effect.getComputedTiming is not a function. (In 'animation.effect.getComputedTiming()', 'animation.effect.getComputedTiming' is undefined)
FAIL ease-in-out function animation.effect.getComputedTiming is not a function. (In 'animation.effect.getComputedTiming()', 'animation.effect.getComputedTiming' is undefined)
FAIL ease-out function animation.effect.getComputedTiming is not a function. (In 'animation.effect.getComputedTiming()', 'animation.effect.getComputedTiming' is undefined)
FAIL easing function which produces values greater than 1 animation.effect.getComputedTiming is not a function. (In 'animation.effect.getComputedTiming()', 'animation.effect.getComputedTiming' is undefined)
FAIL easing function which produces values less than 1 animation.effect.getComputedTiming is not a function. (In 'animation.effect.getComputedTiming()', 'animation.effect.getComputedTiming' is undefined)
FAIL Invalid effect easing value test: '' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: '7' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'test' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'initial' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'inherit' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'unset' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'unrecognized' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'var(--x)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'ease-in-out, ease-out' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'cubic-bezier(1.1, 0, 1, 1)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'cubic-bezier(0, 0, 1.1, 1)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'cubic-bezier(-0.1, 0, 1, 1)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'cubic-bezier(0, 0, -0.1, 1)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'cubic-bezier(0.1, 0, 4, 0.4)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'steps(-1, start)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'steps(0.1, start)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'steps(3, nowhere)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'steps(-3, end)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'function (a){return a}' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'function (x){return x}' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'function(x, y){return 0.3}' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'frames(1)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'frames' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'frames()' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'frames(,)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'frames(a)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'frames(2.0)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'frames(2.5)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
FAIL Invalid effect easing value test: 'frames(2 3)' assert_throws: function "function () {
                    anim.effect.timing.easing = invalidEasing;
                  }" did not throw
PASS Canonical easing 'ease' is returned as set 
PASS Canonical easing 'linear' is returned as set 
PASS Canonical easing 'ease-in' is returned as set 
PASS Canonical easing 'ease-out' is returned as set 
PASS Canonical easing 'ease-in-out' is returned as set 
PASS Canonical easing 'cubic-bezier(0.1, 5, 0.23, 0)' is returned as set 
PASS Canonical easing 'steps(3, start)' is returned as set 
PASS Canonical easing 'steps(3)' is returned as set 
PASS Canonical easing 'frames(3)' is returned as set 
FAIL Change the easing while the animation is running anim.effect.getComputedTiming is not a function. (In 'anim.effect.getComputedTiming()', 'anim.effect.getComputedTiming' is undefined)

